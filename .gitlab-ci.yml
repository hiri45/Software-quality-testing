# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml


before_script:
  - python3 -m venv venv 
  - . venv/bin/activate

stages:          # List of stages for jobs, and their order of execution
  - Test
  - Static Analysis  

flake8:
  stage: Static Analysis
  script:
    #- echo "installing flake8"
    #- pip install flake8 
    - echo "Running flakes8..."
    - flake8 megamart.py

mypy:
  stage: Static Analysis
  script:
    - echo "install mypy"
    - pip install mypy
    - echo "Running mypy..."
    - mypy megamart.py 

pycodestyle:
  stage: Static Analysis
  script:
    - echo "install pycodestyle"
    - pip install pycodestyle
    - echo "Running pycodestyle..."
    - pycodestyle megamart.py

pydocstyle:
  stage: Static Analysis
  script:
    - echo "install pydocstyle"
    - pip install pydocstyle
    - echo "Running pydocstyle..."
    - pydocstyle megamart.py

pylint:
  stage: Static Analysis
  script:
    - echo "install pylint"
    - pip install pylint
    - echo "Running pylint..."
    - pylint megamart.py


testing:   # This job also runs in the test stage.
  stage: Test   
  script:
    - python3 -m pip install coverage
    - coverage run test_megamart.py
    - coverage report -m

